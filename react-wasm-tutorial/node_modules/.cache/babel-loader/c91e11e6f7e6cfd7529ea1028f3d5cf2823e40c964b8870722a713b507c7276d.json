{"ast":null,"code":"let wasm;\nlet WASM_VECTOR_LEN = 0;\nlet cachedUint8Memory0 = null;\nfunction getUint8Memory0() {\n  if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8Memory0;\n}\nconst cachedTextEncoder = typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : {\n  encode: () => {\n    throw Error('TextEncoder not available');\n  }\n};\nconst encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function (arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function (arg, view) {\n  const buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = malloc(buf.length, 1) >>> 0;\n    getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  }\n  let len = arg.length;\n  let ptr = malloc(len, 1) >>> 0;\n  const mem = getUint8Memory0();\n  let offset = 0;\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7F) break;\n    mem[ptr + offset] = code;\n  }\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n    offset += ret.written;\n    ptr = realloc(ptr, len, offset, 1) >>> 0;\n  }\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\nlet cachedInt32Memory0 = null;\nfunction getInt32Memory0() {\n  if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n  return cachedInt32Memory0;\n}\nconst cachedTextDecoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n}) : {\n  decode: () => {\n    throw Error('TextDecoder not available');\n  }\n};\nif (typeof TextDecoder !== 'undefined') {\n  cachedTextDecoder.decode();\n}\n;\nfunction getStringFromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n* @param {string} name\n* @returns {string}\n*/\nexport function greet(name) {\n  let deferred2_0;\n  let deferred2_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.greet(retptr, ptr0, len0);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    deferred2_0 = r0;\n    deferred2_1 = r1;\n    return getStringFromWasm0(r0, r1);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n  }\n}\n\n/**\n* @returns {string}\n*/\nexport function get_sum() {\n  let deferred1_0;\n  let deferred1_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.get_sum(retptr);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    deferred1_0 = r0;\n    deferred1_1 = r1;\n    return getStringFromWasm0(r0, r1);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n  }\n}\nasync function __wbg_load(module, imports) {\n  if (typeof Response === 'function' && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === 'function') {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get('Content-Type') != 'application/wasm') {\n          console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n        } else {\n          throw e;\n        }\n      }\n    }\n    const bytes = await module.arrayBuffer();\n    return await WebAssembly.instantiate(bytes, imports);\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports);\n    if (instance instanceof WebAssembly.Instance) {\n      return {\n        instance,\n        module\n      };\n    } else {\n      return instance;\n    }\n  }\n}\nfunction __wbg_get_imports() {\n  const imports = {};\n  imports.wbg = {};\n  return imports;\n}\nfunction __wbg_init_memory(imports, maybe_memory) {}\nfunction __wbg_finalize_init(instance, module) {\n  wasm = instance.exports;\n  __wbg_init.__wbindgen_wasm_module = module;\n  cachedInt32Memory0 = null;\n  cachedUint8Memory0 = null;\n  return wasm;\n}\nfunction initSync(module) {\n  if (wasm !== undefined) return wasm;\n  const imports = __wbg_get_imports();\n  __wbg_init_memory(imports);\n  if (!(module instanceof WebAssembly.Module)) {\n    module = new WebAssembly.Module(module);\n  }\n  const instance = new WebAssembly.Instance(module, imports);\n  return __wbg_finalize_init(instance, module);\n}\nasync function __wbg_init(input) {\n  if (wasm !== undefined) return wasm;\n  if (typeof input === 'undefined') {\n    input = new URL('wasm_lib_bg.wasm', import.meta.url);\n  }\n  const imports = __wbg_get_imports();\n  if (typeof input === 'string' || typeof Request === 'function' && input instanceof Request || typeof URL === 'function' && input instanceof URL) {\n    input = fetch(input);\n  }\n  __wbg_init_memory(imports);\n  const {\n    instance,\n    module\n  } = await __wbg_load(await input, imports);\n  return __wbg_finalize_init(instance, module);\n}\nexport { initSync };\nexport default __wbg_init;","map":{"version":3,"names":["wasm","WASM_VECTOR_LEN","cachedUint8Memory0","getUint8Memory0","byteLength","Uint8Array","memory","buffer","cachedTextEncoder","TextEncoder","encode","Error","encodeString","encodeInto","arg","view","buf","set","read","length","written","passStringToWasm0","malloc","realloc","undefined","ptr","subarray","len","mem","offset","code","charCodeAt","slice","ret","cachedInt32Memory0","getInt32Memory0","Int32Array","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","getStringFromWasm0","greet","name","deferred2_0","deferred2_1","retptr","__wbindgen_add_to_stack_pointer","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","r0","r1","__wbindgen_free","get_sum","deferred1_0","deferred1_1","__wbg_load","module","imports","Response","WebAssembly","instantiateStreaming","e","headers","get","console","warn","bytes","arrayBuffer","instantiate","instance","Instance","__wbg_get_imports","wbg","__wbg_init_memory","maybe_memory","__wbg_finalize_init","exports","__wbg_init","__wbindgen_wasm_module","initSync","Module","input","URL","import","meta","url","Request","fetch"],"sources":["/Users/egorivanov/WebstormProjects/react-wasm-tutorial/src/pkg/wasm_lib.js"],"sourcesContent":["let wasm;\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n* @param {string} name\n* @returns {string}\n*/\nexport function greet(name) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.greet(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        deferred2_0 = r0;\n        deferred2_1 = r1;\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\n\n/**\n* @returns {string}\n*/\nexport function get_sum() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.get_sum(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        deferred1_0 = r0;\n        deferred1_1 = r1;\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedInt32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL('wasm_lib_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync }\nexport default __wbg_init;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}